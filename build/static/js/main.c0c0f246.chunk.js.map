{"version":3,"sources":["api.js","components/Input/Input.js","helpers.js","components/Product/ProductCard.js","components/Product/ProductItem.js","components/Product/AddProductForm.js","components/Task/Task.js","components/Footer/Footer.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["url","getProducts","callBack","a","fetch","response","json","data","console","error","fetchProduct","id","method","body","productUrl","Error","options","headers","Accept","JSON","stringify","deleteProduct","Input","text","className","value","onChange","placeholder","mask","validator","disabled","changeVal","e","validated","target","type","name","placeholderChar","priceValidate","val","test","codeValidate","scrollTo","document","querySelector","scrollIntoView","block","behavior","ProductCard","props","product","created_at","updated_at","updateProduct","close","useState","editedProduct","updateEditedProduct","editMode","changeMode","errors","updateErrors","updateField","onClick","price","code","moment","format","validMessages","isNil","Object","values","every","x","ProductItem","clickHandler","activeProduct","AddProductForm","addProduct","Task","Footer","Header","href","sortedTableReducer","oldState","newState","table","isDesc","sortBy","filter","direction","descend","ascend","sortFunc","sort","prop","Rfilter","item","toLowerCase","includes","toString","App","products","changeProducts","productCard","changeProductCard","addProductForm","updateFormProduct","initialState","useReducer","updateSortedTable","sortedProducts","sortProductsDispatch","useEffect","showProduct","setTimeout","showForm","column","sortClass","length","map","key","newArr","i","removedProducts","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0c0f246.chunk.js","sourcesContent":["const url = \"http://test-app.viktor.ws/api/products\";\n\nexport const getProducts = async (callBack) => {\n  if (!url) {\n    throw new Error(\"Url should be specified\");\n  }\n  try {\n    const response = await fetch(url)\n    const data = await response.json()\n    callBack(data.data);\n  } catch (er) {\n    console.error(er)\n  }\n};\n\nexport const fetchProduct = async (id, callBack, {method = \"GET\", body = null} = {method: \"GET\"}) => {\n  const productUrl = id ? url + '/' + id : url\n  if (!productUrl) {\n    throw new Error(\"Url should be specified\");\n  }\n\n  const headers = {\n    Accept: '*/*',\n    'Content-Type': 'application/json; charset=utf-8'\n  }\n\n  const options = {\n    method: method,\n    headers: headers\n  }\n  if(body) {\n    options.body = JSON.stringify(body)\n  }\n\n  try {\n    const response = await fetch(productUrl, options)\n    const data = await response.json()\n\n    callBack(data.data);\n  } catch (er) {\n    console.error(er)\n  }\n};\n\nexport const deleteProduct = (id, callBack) => fetchProduct(id, callBack, {method: \"DELETE\"})","import React from \"react\";\nimport MaskedInput from \"react-text-mask\";\n\nconst Input = ({\n  text,\n  className,\n  value = null,\n  onChange,\n  placeholder,\n  mask,\n  validator,\n  disabled = false\n}) => {\n  const changeVal = e => {\n    const validated = validator && validator(e.target.value) || e.target.value === \"\"\n    if(validator && !validated) {\n      return false\n    }\n    onChange(e.target.value)\n  };\n\n  return (\n    <>\n      {text && <span>{text}:</span>}\n      {mask && (\n        <MaskedInput\n          type=\"text\"\n          placeholder={placeholder}\n          name={text}\n          value={value}\n          mask={mask}\n          placeholderChar={\"\\u2000\"}\n          onChange={changeVal}\n          disabled={disabled}\n        />\n      )}\n\n      {!mask && (\n        <label className=\"input-wrap\">\n          <input\n            type=\"text\"\n            className={className}\n            onChange={changeVal}\n            placeholder={placeholder}\n            disabled={disabled}\n            value={value}\n          />\n        </label>\n      )}\n    </>\n  );\n};\n\nexport default Input;\n","export const priceValidate = (val) => /^\\d+$/i.test(val)\n\nexport const codeValidate = (val) => /^(\\d){4}-(\\d){4}/.test(val)\n\nexport const scrollTo = (val) => () => {\n  document.querySelector(val).scrollIntoView({\n    block: \"end\",\n    behavior: 'smooth'\n  });\n}","import React, { useState } from \"react\";\nimport \"./product.scss\";\nimport moment from \"moment\";\nimport Input from \"../Input/Input\";\nimport { codeValidate, priceValidate } from \"../../helpers\";\nimport { isNil } from \"ramda\";\nexport const ProductCard = props => {\n  const { id, created_at, updated_at } = props.product;\n  const {updateProduct, deleteProduct, close} = props\n  const [editedProduct, updateEditedProduct] = useState(props.product);\n  const  [editMode, changeMode] = useState(false);\n  const [errors, updateErrors] = useState({});\n\n  const validateForm = () => {\n    const validMessages = {\n      name:\n          isNil(editedProduct.name) || !editedProduct.name ? \"Required.\" : null,\n      code: codeValidate(editedProduct.code)\n          ? null\n          : \"Required. Should be in format XXXX-XXXX and only digits\",\n      price: priceValidate(editedProduct.price)\n          ? null\n          : \"Required. Should be only digits\"\n    };\n\n    updateErrors(validMessages);\n\n    /// if Error Obj has no values\n    if (Object.values(validMessages).every(x => isNil(x))) {\n      updateProduct(editedProduct);\n    }\n  };\n  const updateField = name => val => {\n    updateEditedProduct({\n      ...editedProduct,\n      [name]: val || \"\"\n    });\n  };\n\n  return (\n    <div className=\"product-card\">\n      <button className=\"close-button\" onClick={close}><span>x</span></button>\n      <div className=\"flex\">\n        <h3>\n          <span className=\"id\">id: {id}</span>\n          <Input value={editedProduct.name} disabled={!editMode} onChange={updateField(\"name\")}/>\n          <div className=\"error\">{errors.name}</div>\n        </h3>\n        <div className=\"price\">\n          <div className=\"label\">Price:</div>\n          <Input value={editedProduct.price} disabled={!editMode} onChange={updateField(\"price\")} validator={priceValidate}/>\n          <div className=\"error\">{errors.price}</div>\n        </div>\n      </div>\n      <div className=\"code\">\n        <span className=\"label\">Code:</span>\n        <Input value={editedProduct.code} disabled={!editMode} onChange={updateField(\"code\")} mask={[/\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}/>\n        <div className=\"error\">{errors.code}</div>\n      </div>\n      <div className=\"created\">\n        <span className=\"label\">Created:</span>\n        {moment(created_at).format(\"DD/MM/YYYY\")}\n      </div>\n      <div className=\"updated\">\n        <span className=\"label\">Updated:</span>\n        {moment(updated_at).format(\"DD/MM/YYYY\")}\n      </div>\n      <div className=\"button-group\">\n        {!editMode && (\n            <button className=\"button\" onClick={() => changeMode(!editMode)}>\n              Edit\n            </button>\n        )}\n        {updateProduct && editMode && <button className=\"button\" onClick={validateForm}>Update</button>}\n        {deleteProduct && <button className=\"button danger\" onClick={deleteProduct}>Delete</button>}\n      </div>\n\n    </div>\n  );\n};\n\nexport default ProductCard;\n","import React from \"react\";\nimport \"./product.scss\";\nimport moment from \"moment\";\n\nconst ProductItem = ({\n  product: { id, name, code, price, created_at, updated_at },\n  clickHandler,\n  activeProduct\n}) => {\n  return (\n    <tr\n      className={`product-item ${activeProduct && activeProduct.id === id ? \"active\" : \"\"}`}\n      onClick={clickHandler(id)}\n    >\n      <td className=\"id\">{id}</td>\n      <td className=\"name\">{name}</td>\n      <td className=\"code\">{code}</td>\n      <td className=\"price\">{price}</td>\n      <td className=\"created\">{moment(created_at).format(\"DD/MM/YYYY\")}</td>\n      <td className=\"updated\">{moment(updated_at).format(\"DD/MM/YYYY\")}</td>\n    </tr>\n  );\n};\n\nexport default ProductItem;\n","import React, { useState } from \"react\";\nimport \"./product.scss\";\nimport Input from \"../Input/Input\";\nimport { isNil } from \"ramda\";\nimport { codeValidate, priceValidate } from \"../../helpers\";\n\nexport const AddProductForm = ({ product, addProduct, close }) => {\n  const [editedProduct, updateEditedProduct] = useState(product);\n\n  const [errors, updateErrors] = useState({});\n\n  const updateField = name => val => {\n    updateEditedProduct({\n      ...editedProduct,\n      [name]: val || \"\"\n    });\n  };\n\n  const validateForm = () => {\n    const validMessages = {\n      name:\n        isNil(editedProduct.name) || !editedProduct.name ? \"Required.\" : null,\n      code: codeValidate(editedProduct.code)\n        ? null\n        : \"Required. Should be in format XXXX-XXXX and only digits\",\n      price: priceValidate(editedProduct.price)\n        ? null\n        : \"Required. Should be only digits\"\n    };\n\n    updateErrors(validMessages);\n\n    /// if Error Obj has no values\n    if (Object.values(validMessages).every(x => isNil(x))) {\n      addProduct(editedProduct);\n    }\n  };\n\n  return (\n    <div className=\"product-card add-product-form\">\n      <button className=\"close-button\" onClick={close}>\n        <span>x</span>\n      </button>\n      <h3>Add a new product</h3>\n      <div>\n        <Input\n          text=\"Name\"\n          value={editedProduct.name}\n          onChange={updateField(\"name\")}\n        />\n        <div className=\"error\">{errors.name}</div>\n      </div>\n      <div>\n        <Input\n          text=\"Code\"\n          value={editedProduct.code}\n          placeholder=\"XXXX-XXXX\"\n          mask={[/\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/]}\n          onChange={updateField(\"code\")}\n        />\n        <div className=\"error\">{errors.code}</div>\n      </div>\n      <div>\n        <Input\n          text=\"Price\"\n          value={editedProduct.price}\n          onChange={updateField(\"price\")}\n          validator={priceValidate}\n        />\n        <div className=\"error\">{errors.price}</div>\n      </div>\n      <div className=\"button-group\">\n        {addProduct && (\n          <button className=\"button\" onClick={validateForm}>\n            Add\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AddProductForm;\n","import React from \"react\"\n\nconst Task = () => {\n  return <div className=\"task-wrap container\">\n    <h2>Задача</h2>\n    <div className=\"flex\">\n      <div className=\"\">\n        <p>Есть готовое бэкенд-приложение - база продуктов, которое имеет JSON REST-API.</p>\n        <ul>\n          <li>code - обязательно для заполнения, должно иметь формат ####-####, где # - цифра от 1 до 9.</li>\n          <li>name - обязательно для заполнения, строка</li>\n          <li>price - обязательно для заполнения, числовое значение</li>\n        </ul>\n      </div>\n\n    <div className=\"w\">\n      <p>Используя любой современный фронтенд Фреймворк (Angular/Vue/React/другой; Vue - предпочтительно), разработать фронтенд-приложение, которое будет общаться с бэкендом и будет выполнять следующие задачи:</p>\n      <ul>\n        <li>Выводить список продуктов в таблице + возможность применить фильтр по code, name либо price продукта</li>\n        <li>Реализовывать формы создавания/измененения/удаления продуктов. Сообщать об ошибках валидации</li>\n        <li>Загружать данные о каком-нибудь отдельном продукте (/api/products/id), показывать карточку продукта</li>\n        <li>Решение загрузить на в гит-репозиторий (например, гитхаб). Написать краткую инструкцию по сборке и запуску (npm install/run и т.д)</li>\n      </ul>\n    </div>\n    </div>\n  </div>\n}\n\nexport default Task","import React from \"react\"\nimport Task from \"../Task/Task\";\n\nconst Footer = () => {\n\n  return <div className=\"footer-wrap\" id=\"footer\">\n    <Task/>\n  </div>\n}\n\nexport default Footer","import React from \"react\"\nimport { scrollTo } from \"../../helpers\";\n\nconst Header = () => {\n\n  return <header className=\"App-header container\">\n    <h1>Тестовое задание</h1>\n    <div className=\"project-description\">\n      <div>Автор <a href=\"https://sitewanted.ru/cv\" className=\"author\" target=\"_blank\">Артемий Егоров</a></div>\n      <time className=\"date\">Дата: 23/10/2019</time>\n      <div className=\"time\">Затраченное время: 5ч.</div>\n      <div onClick={scrollTo('#footer')} className=\"about\">Подробнее о задаче</div>\n    </div>\n\n  </header>\n}\n\nexport default Header","import React, { useState, useEffect, useReducer } from \"react\";\nimport { getProducts, fetchProduct, deleteProduct } from \"./api\";\nimport \"./styles/app.scss\";\nimport ProductCard from \"./components/Product/ProductCard\";\nimport ProductItem from \"./components/Product/ProductItem\";\nimport AddProductForm from \"./components/Product/AddProductForm\";\nimport Input from \"./components/Input/Input\";\nimport { ascend, descend, prop, sort, filter as Rfilter } from \"ramda\";\nimport {scrollTo} from \"./helpers\"\nimport Footer from \"./components/Footer/Footer\";\nimport Header from \"./components/Header/Header\";\n\nfunction sortedTableReducer(oldState, newState) {\n  const { table, isDesc, sortBy, filter } = { ...oldState, ...newState };\n  const direction = isDesc ? descend : ascend;\n  const sortFunc = sort(direction(prop(sortBy)));\n  const sortedAndFilteredTable = Rfilter(\n    item =>\n      item.name.toLowerCase().includes(filter.toLowerCase()) ||\n      item.code.toString().includes(filter.toLowerCase()) ||\n      item.id.toString().includes(filter.toLowerCase()),\n    sortFunc(table)\n  );\n\n  return { table: sortedAndFilteredTable, filter, sortBy, isDesc };\n}\n\nfunction updateSortedTable(table = [], sortBy, isDesc = true, filter = \"\") {\n  const initialState = { isDesc, sortBy, table, filter };\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [state, dispatch] = useReducer(sortedTableReducer, initialState);\n\n  return [state, dispatch];\n}\n\nfunction App() {\n  const [products, changeProducts] = useState([]);\n  const [productCard, changeProductCard] = useState(null);\n  const [addProductForm, updateFormProduct] = useState(null);\n  const [sortedProducts, sortProductsDispatch] = updateSortedTable(\n    products,\n    \"price\",\n    false\n  );\n\n  useEffect(() => {\n    getProducts(changeProducts);\n  }, []);\n\n  useEffect(() => {\n    sortProductsDispatch({ table: products });\n  }, [products]);\n\n  const showProduct = id => () => {\n    fetchProduct(id, changeProductCard);\n    setTimeout(scrollTo('.product-card'),300)\n  };\n\n  const updateProduct = editedProduct => () => {\n    fetchProduct(editedProduct.id, changeProductCard, {\n      method: \"PUT\",\n      body: { ...editedProduct }\n    });\n    const newArr = [\n      ...products.filter(i => i.id !== editedProduct.id),\n      editedProduct\n    ];\n    changeProducts(newArr);\n  };\n\n  const showForm = product => () => {\n    const defaultForm = {\n      name: \"\",\n      price: \"\",\n      code: \"\"\n    };\n    updateFormProduct({\n      ...defaultForm,\n      ...product\n    });\n  };\n\n  const addProduct = product => {\n    fetchProduct(null, data => changeProducts([...products, data]), {\n      method: \"POST\",\n      body: { ...product }\n    });\n    updateFormProduct(null)\n  };\n  const delProduct = () => {\n    const removedProducts = products.filter(\n      product => productCard.id !== product.id\n    );\n    deleteProduct(productCard.id, () => {\n      changeProducts(removedProducts);\n    });\n    changeProductCard(null);\n  };\n\n  const sort = column => () => {\n    const direction =\n      column === sortedProducts.sortBy ? !sortedProducts.isDesc : false;\n    sortProductsDispatch({\n      sortBy: column,\n      isDesc: direction\n    });\n  };\n\n  const sortClass = column => {\n    if (column !== sortedProducts.sortBy) {\n      return;\n    }\n    return sortedProducts.isDesc ? \"desc\" : \"asc\";\n  };\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className=\"content container\">\n        <h2>\n          Products ({sortedProducts.table.length}/{products.length})\n          <button className=\"button\" onClick={showForm()}>\n            +\n          </button>\n        </h2>\n        <p>You can filter by name, code or ID. Start typing</p>\n        <Input\n          value={sortedProducts.filter}\n          onChange={val =>\n            sortProductsDispatch({ table: products, filter: val })\n          }\n        />\n        <div className=\"flex\">\n          {products && (\n              <table className=\"products\">\n                <thead>\n                <tr>\n                  <th>\n                    <div onClick={sort(\"id\")} className={sortClass(\"id\")}>\n                      ID\n                    </div>\n                  </th>\n                  <th>\n                    <div onClick={sort(\"name\")} className={sortClass(\"name\")}>\n                      Name\n                    </div>\n                  </th>\n                  <th>\n                    <div onClick={sort(\"code\")} className={sortClass(\"code\")}>\n                      Code\n                    </div>\n                  </th>\n                  <th>\n                    <div onClick={sort(\"price\")} className={sortClass(\"price\")}>\n                      Price\n                    </div>\n                  </th>\n                  <th>\n                    <div\n                        onClick={sort(\"created_at\")}\n                        className={sortClass(\"created_at\")}\n                    >\n                      Created\n                    </div>\n                  </th>\n                  <th>\n                    <div\n                        onClick={sort(\"updated_at\")}\n                        className={sortClass(\"updated_at\")}\n                    >\n                      Updated\n                    </div>\n                  </th>\n                </tr>\n                </thead>\n                <tbody>\n                {sortedProducts.table.map(product => (\n                    <ProductItem\n                        key={product.id}\n                        product={product}\n                        activeProduct={productCard}\n                        clickHandler={showProduct}\n                    />\n                ))}\n                </tbody>\n              </table>\n          )}\n          <div className=\"add-product-wrap\">\n            {addProductForm && (\n                <AddProductForm\n                    product={addProductForm}\n                    addProduct={addProduct}\n                    close={() => updateFormProduct(null)}\n                />\n            )}\n          </div>\n\n        </div>\n\n\n        {productCard && (\n          <ProductCard\n            key={productCard.id}\n            product={productCard}\n            editMode={showForm}\n            updateProduct={updateProduct}\n            deleteProduct={delProduct}\n            close={() => changeProductCard(null)}\n          />\n        )}\n\n\n      </div>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}